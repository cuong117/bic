{"2d7683ed820116b77cba9b4b290cd7ce7dfa5cf4":{"changes":{"src\/test\/java\/com\/fasterxml\/jackson\/dataformat\/xml\/jaxb\/JAXBObjectId170Test.java":"ADD","\/dev\/null":"DELETE","src\/test\/java\/com\/fasterxml\/jackson\/dataformat\/xml\/lists\/NestedUnwrappedListsTest.java":"MODIFY","src\/test\/java\/com\/fasterxml\/jackson\/dataformat\/xml\/lists\/NestedUnwrappedLists180Test.java":"ADD","src\/main\/java\/com\/fasterxml\/jackson\/dataformat\/xml\/deser\/FromXmlParser.java":"MODIFY","src\/test\/java\/com\/fasterxml\/jackson\/dataformat\/xml\/misc\/EmptyPolymorphicTest.java":"MODIFY","src\/test\/java\/com\/fasterxml\/jackson\/dataformat\/xml\/RoundtripContentTest.java":"MODIFY","src\/test\/java\/com\/fasterxml\/jackson\/dataformat\/xml\/lists\/ListRoundtripTest.java":"MODIFY","release-notes\/VERSION":"MODIFY","src\/test\/java\/com\/fasterxml\/jackson\/dataformat\/xml\/stream\/XmlParserTest.java":"MODIFY"},"diff":{"src\/test\/java\/com\/fasterxml\/jackson\/dataformat\/xml\/jaxb\/JAXBObjectId170Test.java":[{"add":[],"delete":[]}],"\/dev\/null":[{"add":[],"delete":[]}],"src\/test\/java\/com\/fasterxml\/jackson\/dataformat\/xml\/lists\/NestedUnwrappedListsTest.java":[{"add":["98","        \/\/ 06-Jan-2015, tatu: Really should have one empty entry, not 0","99","        assertEquals(1, svc.vehicleMonitoringDelivery.size());","120","        \/\/ 06-Jan-2015, tatu: Really should have one empty entry, not 0","121","        assertEquals(1, del.vehicleActivity.size());","156",""],"delete":["98","        assertEquals(0, svc.vehicleMonitoringDelivery.size());","119","        assertEquals(0, del.vehicleActivity.size());","154","    "]}],"src\/test\/java\/com\/fasterxml\/jackson\/dataformat\/xml\/lists\/NestedUnwrappedLists180Test.java":[{"add":[],"delete":[]}],"src\/main\/java\/com\/fasterxml\/jackson\/dataformat\/xml\/deser\/FromXmlParser.java":[{"add":["323","        \/\/ start markers require information from parent","422","\/*","440","    }","441","*\/","511","                if (_parsingContext.inArray()) {","512","                    \/\/ 06-Jan-2015, tatu: as per [dataformat-xml#180], need to","513","                    \/\/    expose as empty Object, not null","514","                    _nextToken = JsonToken.END_OBJECT;","515","                    _parsingContext = _parsingContext.createChildObjectContext(-1, -1);","516","                    return (_currToken = JsonToken.START_OBJECT);","517","                }","545","                 * deserializing an array, we better hide the empty text.","547","                \/\/ Also: must skip following END_ELEMENT","548","                _xmlTokens.skipEndElement();","551","                        \/\/ 06-Jan-2015, tatu: as per [dataformat-xml#180], need to","552","                        \/\/    expose as empty Object, not null (or, worse, as used to","553","                        \/\/    be done, by swallowing the token)","554","                        _nextToken = JsonToken.END_OBJECT;","555","                        _parsingContext = _parsingContext.createChildObjectContext(-1, -1);","556","                        return (_currToken = JsonToken.START_OBJECT);"],"delete":["323","        \/\/ [JACKSON-395]: start markers require information from parent","422","    \/*","440","    } ","441","    *\/","536","                \/\/ Also: must skip following END_ELEMENT","537","                _xmlTokens.skipEndElement();","540","                 * deserializing an array, we better just hide the text","541","                 * altogether.","545","                        _currToken = JsonToken.END_ARRAY;","546","                        _parsingContext = _parsingContext.getParent();","547","                        _namesToWrap = _parsingContext.getNamesToWrap();","548","                        return _currToken;"]}],"src\/test\/java\/com\/fasterxml\/jackson\/dataformat\/xml\/misc\/EmptyPolymorphicTest.java":[{"add":["40","\/\/System.out.println(\"XML:\\n\"+xml);"],"delete":["40","        System.out.println(\"XML:\\n\"+xml);"]}],"src\/test\/java\/com\/fasterxml\/jackson\/dataformat\/xml\/RoundtripContentTest.java":[{"add":["7","    private final XmlMapper MAPPER = new XmlMapper();","8","","22","        \/\/ two variants; first without indentation","23","        _verifyRoundtrip(w.writeValueAsString(input), input);","25","        \/\/ and then with indentation","26","        _verifyRoundtrip(w.withDefaultPrettyPrinter()","27","                .writeValueAsString(input), input);","28","    }","30","    private void _verifyRoundtrip(String xml, MediaItem exp) throws Exception","31","    {","35","        assertEquals(exp.getContent().getTitle(), result.getContent().getTitle());"],"delete":["9","        final XmlMapper MAPPER = new XmlMapper();","10","        ","22","        \/*","23","        StringWriter sw = new StringWriter();","24","        try {","25","        w.writeValue(sw, input);","26","        } finally {","27","            System.err.println(\"So far -> [\"+sw+\"]\");","28","        }","29","        *\/","30","        ","31","        String xml = w.writeValueAsString(input);","33","\/\/System.err.println(\"DEBUG: Xml == \"+xml);","38","        assertEquals(content.getTitle(), result.getContent().getTitle());"]}],"src\/test\/java\/com\/fasterxml\/jackson\/dataformat\/xml\/lists\/ListRoundtripTest.java":[{"add":["67","    \/\/ For [dataformat-xml#64]"],"delete":["67","    \/\/ For [Issue#64]"]}],"release-notes\/VERSION":[{"add":["11","#180: Problem with deserialization of nested non-wrapped lists, with empty inner list"],"delete":[]}],"src\/test\/java\/com\/fasterxml\/jackson\/dataformat\/xml\/stream\/XmlParserTest.java":[{"add":["48","        \/\/ 06-Jan-2015, tatu: Not superbly simple, actually; whether we'll have `null`","49","        \/\/    or `{}` depends on context; if in array context, latter; otherwise former"],"delete":[]}]}}}