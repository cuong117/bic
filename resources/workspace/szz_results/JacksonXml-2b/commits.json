{"37eb331acce08142ad027f127c355f9b462fe9e0":{"changes":{"src\/main\/java\/com\/fasterxml\/jackson\/dataformat\/xml\/deser\/XmlTokenStream.java":"MODIFY","src\/test\/java\/com\/fasterxml\/jackson\/dataformat\/xml\/misc\/XmlTextTest.java":"MODIFY","src\/test\/java\/com\/fasterxml\/jackson\/dataformat\/xml\/misc\/UnwrappingWithXMLTest.java":"MODIFY","release-notes\/VERSION":"MODIFY"},"diff":{"src\/main\/java\/com\/fasterxml\/jackson\/dataformat\/xml\/deser\/XmlTokenStream.java":[{"add":["55","","56","    \/**","57","     * If true we have a START_ELEMENT with mixed text","58","     *","59","     * @since 2.8","60","     *\/","61","    protected boolean _mixedText;","62","","302","","324","            final boolean startElementNext = _xmlReader.getEventType() == XMLStreamReader.START_ELEMENT;","325","            \/\/ If we have no\/all-whitespace text followed by START_ELEMENT, ignore text","326","            if (startElementNext) {","327","                if (text == null || _allWs(text)) {","328","                    _mixedText = false;","329","                    return _initStartElement();","330","                }","331","                _mixedText = true;","335","            \/\/ For END_ELEMENT we will return text, if any","336","            if (text != null) {","337","                _mixedText = false;","338","                _textValue = text;","339","                return (_currentState = XML_TEXT);","340","            }","341","            _mixedText = false;","343","","348","            \/\/ mixed text with other elements","349","            if (_mixedText){","350","                _mixedText = false;","351","                return _initStartElement();","352","            }","353","            \/\/ text followed by END_ELEMENT","518","","519","    protected boolean _allWs(String str)","520","    {","521","        final int len = (str == null) ? 0 : str.length();","522","        if (len > 0) {","523","            for (int i = 0; i < len; ++i) {","524","                if (str.charAt(i) > ' ') {","525","                    return false;","526","                }","527","            }","528","        }","529","        return true;","530","    }","531","    "],"delete":["55","    ","295","    ","317","            \/\/ If it's START_ELEMENT, ignore any text","318","            if (_xmlReader.getEventType() == XMLStreamReader.START_ELEMENT) {","319","                return _initStartElement();","320","            }","321","            \/\/ For END_ELEMENT we will return text, if any","322","            if (text != null) {","331","            \/\/ text is always followed by END_ELEMENT"]}],"src\/test\/java\/com\/fasterxml\/jackson\/dataformat\/xml\/misc\/XmlTextTest.java":[{"add":["31","    static class WindSpeed {","32","        @JacksonXmlProperty(isAttribute = true)","33","        public String units;","34","","35","        @JacksonXmlText","36","        public int value;","37","","38","        public Radius radius;","39","    }","40","","41","    static class Radius {","42","        @JacksonXmlText","43","        public int value;","44","    }","45","","46","        ","47","    \/*","48","    \/**********************************************************","49","    \/* Test methods","50","    \/**********************************************************","51","     *\/","52","","53","    private final XmlMapper MAPPER = xmlMapper(true);","54","    ","64","    \/\/ for [dataformat-xml#196]","65","    public void testMixedContent() throws Exception","66","    {","67","        WindSpeed result = MAPPER.readValue(\"<windSpeed units='kt'> 27 <radius>20<\/radius><\/windSpeed>\",","68","                WindSpeed.class);","69","        assertEquals(27, result.value);","70","        assertNotNull(result.radius);","71","        assertEquals(20, result.radius.value);","72","    }","73","","77","        String xml = MAPPER.writeValueAsString(new Phone());","78","        Phone result = MAPPER.readValue(xml, Phone.class);"],"delete":["43","        final XmlMapper mapper = new XmlMapper();","44","        String xml = mapper.writeValueAsString(new Phone());","45","        Phone result = mapper.readValue(xml, Phone.class);"]}],"src\/test\/java\/com\/fasterxml\/jackson\/dataformat\/xml\/misc\/UnwrappingWithXMLTest.java":[{"add":["84","     * Simple test to verify that explicit schema mapping works fine"],"delete":["84","   * Simple test to verify that explicit schema mapping works fine"]}],"release-notes\/VERSION":[{"add":["8","#196: Mixed content not supported if there are child elements","9"," (reported by hvdp31@github)"],"delete":["8","No changes since 2.7."]}]}}}