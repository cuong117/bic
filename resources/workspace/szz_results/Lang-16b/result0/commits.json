{"13c7f19a5ad506340a7c8d8601ef4bf2426ab325":{"changes":{"src\/main\/java\/org\/apache\/commons\/lang3\/math\/NumberUtils.java":"MODIFY","src\/test\/java\/org\/apache\/commons\/lang3\/math\/NumberUtilsTest.java":"MODIFY","src\/site\/changes\/changes.xml":"MODIFY"},"diff":{"src\/main\/java\/org\/apache\/commons\/lang3\/math\/NumberUtils.java":[{"add":["430","     * <p>If the string starts with <code>0x<\/code> or <code>-0x<\/code> (lower or upper case), it","440","     * @return Number created from the string (or null if the input is null)","457","        if (str.startsWith(\"0x\") || str.startsWith(\"-0x\") || str.startsWith(\"0X\") || str.startsWith(\"-0X\")) {"],"delete":["430","     * <p>If the string starts with <code>0x<\/code> or <code>-0x<\/code>, it","440","     * @return Number created from the string","457","        if (str.startsWith(\"0x\") || str.startsWith(\"-0x\")) {"]}],"src\/test\/java\/org\/apache\/commons\/lang3\/math\/NumberUtilsTest.java":[{"add":["195","        assertTrue(\"createNumber(String) 9a failed\", 0xFADE == NumberUtils.createNumber(\"0xFADE\").intValue());","196","        assertTrue(\"createNumber(String) 9b failed\", 0xFADE == NumberUtils.createNumber(\"0Xfade\").intValue());","197","        assertTrue(\"createNumber(String) 10a failed\", -0xFADE == NumberUtils.createNumber(\"-0xFADE\").intValue());","198","        assertTrue(\"createNumber(String) 10b failed\", -0xFADE == NumberUtils.createNumber(\"-0Xfade\").intValue());"],"delete":["195","        assertTrue(\"createNumber(String) 9 failed\", 0xFADE == NumberUtils.createNumber(\"0xFADE\").intValue());","196","        assertTrue(\"createNumber(String) 10 failed\", -0xFADE == NumberUtils.createNumber(\"-0xFADE\").intValue());"]}],"src\/site\/changes\/changes.xml":[{"add":["24","    <action type=\"fix\" issue=\"LANG-746\">NumberUtils does not handle upper-case hex: 0X and -0X<\/action>"],"delete":[]}]}}}